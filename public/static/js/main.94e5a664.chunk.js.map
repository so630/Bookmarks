{"version":3,"sources":["components/Card.jsx","components/CategoryForm.jsx","App.jsx","index.js"],"names":["Form","props","className","autoComplete","name","onChange","style","marginBottom","placeholder","limit","marginRight","onClick","update","class","cancel","Card","useState","title","link","setLink","isClick","setClick","del","event","target","parentNode","childNodes","textContent","index","links","forEach","i","window","confirm","setEdit","header","click","isEdit","color","delc","position","top","left","map","href","length","value","prev","document","querySelectorAll","input","Cookies","CategoryForm","setTitle","type","submit","float","padding","cookie","App","username","get","data","objToday","Date","dayOfWeek","Array","getDay","domEnder","a","test","parseInt","charAt","dayOfMonth","getDate","curMonth","getMonth","curYear","getFullYear","useEffect","fetch","method","headers","body","JSON","stringify","then","res","json","console","log","setLinks","arr","category","push","obj","splice","fontSize","textAlign","display","fontFamily","width","alignItems","flexWrap","bottom","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.94e5a664.chunk.js","sourcesContent":["import './Card.css';\r\nimport {useState} from 'react';\r\n\r\nfunction Card(props) {\r\n\r\n    let [link, setLink] = useState({title: '', link: ''});\r\n    let [isClick, setClick] = useState(false);\r\n\r\n    function onChange(event) {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n\r\n        if (name == \"link\") {\r\n            setLink(prev => {\r\n                return {\r\n                    title: prev.title,\r\n                    link: value\r\n                }\r\n            })\r\n        } else {\r\n            setLink(prev => {\r\n                return {\r\n                    title: value,\r\n                    link: prev.link\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    function del(event) {\r\n        // make the button first\r\n        let title = event.target.parentNode.parentNode.childNodes[0].textContent;\r\n        // let link = event.target.parentNode.parentNode.childNodes[0].href;\r\n        let index = -1;\r\n        props.links.forEach((link, i) => {\r\n            if (link.title == title) {\r\n                index = i;\r\n            }\r\n        })\r\n        let c = window.confirm(\"Are you sure you want to delete this link?\")\r\n        if (!c) {\r\n            return;\r\n        }\r\n        props.setEdit(false)\r\n        props.del(index, props.header);\r\n    }\r\n\r\n    function update() {\r\n        let inputs = document.querySelectorAll('.form-control');\r\n        inputs.forEach(input => {\r\n            input.value = '';\r\n        })\r\n        props.update(link, props.header);\r\n    }\r\n\r\n    function delc() {\r\n        let c = window.confirm(\"Are you sure you want to delete this category?\")\r\n        if (!c) {\r\n            return;\r\n        }\r\n        props.setEdit(false)\r\n        props.delc(props.header);\r\n    }\r\n\r\n    \r\n\r\n    function click() {\r\n        if (isClick) {\r\n            setClick(false);\r\n        } else {\r\n            setClick(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            {props.isEdit ? <a className=\"delete category\" style={{color: '#dc3545'}} onClick={delc}><i class=\"fas fa-times\"></i></a> : null}\r\n            <i class=\"fas fa-bookmark\" style={{position: 'absolute', top: '0', left: '15px'}}></i>\r\n            <h1 className=\"header\">{props.header}</h1>\r\n            <hr></hr>\r\n            {props.links.map((link, i) => {\r\n                return (\r\n                    <h1 className=\"link-h1\">\r\n                        <a key={i} className=\"link\" href={link.link} target=\"_blank\">{link.title}</a>\r\n                        {props.isEdit ? <a key={i} className=\"delete\" onClick={del}><i class=\"far fa-trash-alt\"></i></a> : null}\r\n                    </h1>\r\n                )\r\n            })}\r\n            {props.links.length == 0 ? null : <hr></hr>}\r\n\r\n            {!isClick ? <button className=\"btn btn-secondary\" onClick={click}>Add Link</button> : <Form onChange={onChange} update={update} cancel={click}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Form(props) {\r\n    return (\r\n        <>\r\n            <input className=\"form-control\" autoComplete=\"off\" name=\"link\" onChange={props.onChange} style={{marginBottom: '10px'}} placeholder=\"Link...\"/>\r\n            <input className=\"form-control\" autoComplete=\"off\" name=\"title\" limit=\"24\" onChange={props.onChange} style={{marginBottom: '10px'}} placeholder=\"Title...\"/>\r\n            <button className=\"btn btn-secondary\" style={{marginRight: '10px'}} onClick={props.update}>Add Link</button>\r\n            <button class=\"btn btn-secondary\" onClick={props.cancel}>Cancel</button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Card;","import './Card.css';\r\nimport {useState} from 'react';\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst cookies = new Cookies();\r\n\r\n\r\nfunction CategoryForm(props) {\r\n    let [title, setTitle] = useState('')\r\n\r\n    function onChange(event) {\r\n        setTitle(event.target.value);\r\n    }\r\n\r\n    function submit(event) {\r\n        props.submit(title)\r\n    }\r\n\r\n    return (\r\n        <div className=\"card-form\">\r\n            <input className=\"form-control\" style={{marginBottom: '10px'}} onChange={onChange} placeholder=\"Enter the title...\" type=\"text\"/>\r\n            <button className=\"btn btn-secondary\" onClick={submit} style={{float: 'right', padding: '6px 14px'}}>+</button>\r\n            <button className=\"btn btn-secondary\" onClick={props.cancel} style={{float: 'left'}}>Cancel</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoryForm;","import './App.css';\r\nimport Card from './components/Card';\r\nimport {useEffect, useState} from 'react';\r\nimport CategoryForm from './components/CategoryForm';\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst cookie = new Cookies();\r\n\r\nfunction App() {\r\n    let username = cookie.get('username')\r\n    let data = []\r\n    var objToday = new Date(),\r\n            weekday = new Array('Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'),\r\n            dayOfWeek = weekday[objToday.getDay()],\r\n            domEnder = function() { var a = objToday; if (/1/.test(parseInt((a + \"\").charAt(0)))) return \"th\"; a = parseInt((a + \"\").charAt(1)); return 1 == a ? \"st\" : 2 == a ? \"nd\" : 3 == a ? \"rd\" : \"th\" }(),\r\n            dayOfMonth = ( objToday.getDate() < 10) ? '0' + objToday.getDate() + domEnder : objToday.getDate() + domEnder,\r\n            months = new Array('January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'),\r\n            curMonth = months[objToday.getMonth()],\r\n            curYear = objToday.getFullYear()\r\n    let [date, setDate] = useState(dayOfWeek + ', ' + dayOfMonth + ' ' + curMonth + ', ' + curYear)\r\n    useEffect(() => {\r\n        fetch('/data', {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({username: username})\r\n        }).then((res) => {\r\n            res.json().then((json) => {data = json; console.log(json)}).then(() => {\r\n                setLinks(data);\r\n            });\r\n        })\r\n    }, [])\r\n    let [isClick, setClick] = useState(false);\r\n    let [links, setLinks] = useState(data);\r\n    let [isEdit, setEdit] = useState(false);\r\n\r\n    function onClick() {\r\n        setClick(true)\r\n    }\r\n\r\n    function cancel() {\r\n        setClick(false)\r\n    }\r\n\r\n    function submit(title) {\r\n        setLinks(prev => {\r\n            fetch('/update', {\r\n                method: 'POST',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({username: username, data: [...prev, {title: title, links: []}]})\r\n            }).then((res) => {\r\n                console.log('req sent')\r\n            })\r\n            return [...prev, {title: title, links: []}]\r\n        })\r\n    }\r\n\r\n    function update(link, title) {\r\n        setLinks(prev => {\r\n            let arr = prev;\r\n            arr.forEach(category => {\r\n                if (category.title == title) {\r\n                    category.links.push(link);\r\n                }\r\n            })\r\n\r\n            fetch('/update', {\r\n                method: 'POST',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({username: username, data: [...arr]})\r\n            }).then((res) => {\r\n                console.log('req sent')\r\n            })\r\n\r\n            return [...arr];\r\n       \r\n       })\r\n    }\r\n\r\n    function del(index, header) {\r\n        setLinks(prev => {\r\n            let arr = prev;\r\n            arr.forEach(obj => {\r\n                if (obj.title == header) {\r\n                    obj.links.splice(index, 1);\r\n                }\r\n            })\r\n\r\n            fetch('/update', {\r\n                method: 'POST',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({username: username, data: [...arr]})\r\n            }).then((res) => {\r\n                console.log('req sent')\r\n            })\r\n\r\n            return [...arr];\r\n        })\r\n    }\r\n\r\n    function delc(header) {\r\n        setLinks(prev => {\r\n            let arr = prev;\r\n            arr.forEach((obj, i) => {\r\n                if (obj.title == header) {\r\n                    arr.splice(i, 1);\r\n                }\r\n            })\r\n\r\n            fetch('/update', {\r\n                method: 'POST',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({username: username, data: [...arr]})\r\n            }).then((res) => {\r\n                console.log('req sent')\r\n            })\r\n\r\n            return [...arr];\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1 style={{fontSize: '40px', textAlign: 'center', display: 'block', float: 'center', fontFamily: \"'McLaren', cursive\", fontSize: '45px'}}><em>Bookmarks</em></h1>\r\n            <div style={{display: 'block', width: '100%'}}>\r\n                <div style={{display: 'flex', alignItems: 'start', flexWrap: 'wrap'}}>\r\n                    {links.map(link => {\r\n                        return <Card links={link.links} header={link.title} update={update} del={del} setEdit={setEdit} isEdit={isEdit} delc={delc}/>\r\n                    })}\r\n                </div>\r\n            </div>\r\n            <div style={{position: 'fixed', bottom: '15px', left: '10px', display: 'inline-flex'}}>\r\n                {/* <div style={{display: 'inline-flex'}}> */}\r\n                    {!isClick ? <button class=\"btn btn-success\" onClick={onClick}>Add Category</button> : <CategoryForm cancel={cancel} submit={submit} />}\r\n                {/* </div> */}\r\n                <button class=\"btn btn-danger edit\" onClick={() => isEdit ? setEdit(false) : setEdit(true)}>{isEdit ? \"❌\" : 'Edit'}</button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}