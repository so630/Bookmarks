{"version":3,"sources":["components/Card.jsx","components/CategoryForm.jsx","App.jsx","index.js"],"names":["Form","props","className","autoComplete","name","onChange","style","marginBottom","placeholder","limit","marginRight","onClick","update","class","cancel","Card","useState","title","link","setLink","isClick","setClick","click","header","links","map","i","href","target","length","event","value","prev","document","querySelectorAll","forEach","input","Cookies","CategoryForm","setTitle","type","submit","float","padding","cookie","App","username","get","data","objToday","Date","dayOfWeek","Array","getDay","domEnder","a","test","parseInt","charAt","dayOfMonth","getDate","curMonth","getMonth","curYear","getFullYear","date","setDate","useEffect","fetch","method","headers","body","JSON","stringify","then","res","json","console","log","setLinks","arr","category","push","setInterval","getHours","getMinutes","getSeconds","fontSize","textAlign","display","position","bottom","right","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4292ba93.chunk.js","sourcesContent":["import './Card.css';\r\nimport {useState} from 'react';\r\n\r\nfunction Card(props) {\r\n\r\n    let [link, setLink] = useState({title: '', link: ''});\r\n    let [isClick, setClick] = useState(false);\r\n\r\n    function onChange(event) {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n\r\n        if (name == \"link\") {\r\n            setLink(prev => {\r\n                return {\r\n                    title: prev.title,\r\n                    link: value\r\n                }\r\n            })\r\n        } else {\r\n            setLink(prev => {\r\n                return {\r\n                    title: value,\r\n                    link: prev.link\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    function update() {\r\n        let inputs = document.querySelectorAll('.form-control');\r\n        inputs.forEach(input => {\r\n            input.value = '';\r\n        })\r\n        props.update(link, props.header);\r\n    }\r\n\r\n    function click() {\r\n        if (isClick) {\r\n            setClick(false);\r\n        } else {\r\n            setClick(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <h1 className=\"header\">{props.header}</h1>\r\n            <hr></hr>\r\n            {props.links.map((link, i) => {\r\n                return (\r\n                    <h1 className=\"link-h1\">\r\n                        <a key={i} className=\"link\" href={link.link} target=\"_blank\">{link.title}</a>\r\n                    </h1>\r\n                )\r\n            })}\r\n            {props.links.length == 0 ? null : <hr></hr>}\r\n            {/* <Form onChange={onChange} update={update} /> */}\r\n\r\n            {!isClick ? <button className=\"btn btn-primary\" onClick={click}>Add Link</button> : <Form onChange={onChange} update={update} cancel={click}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Form(props) {\r\n    return (\r\n        <>\r\n            <input className=\"form-control\" autoComplete=\"off\" name=\"link\" onChange={props.onChange} style={{marginBottom: '10px'}} placeholder=\"Link...\"/>\r\n            <input className=\"form-control\" autoComplete=\"off\" name=\"title\" limit=\"24\" onChange={props.onChange} style={{marginBottom: '10px'}} placeholder=\"Title...\"/>\r\n            <button className=\"btn btn-primary\" style={{marginRight: '10px'}} onClick={props.update}>Add Link</button>\r\n            <button class=\"btn btn-primary\" onClick={props.cancel}>Cancel</button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Card;","import './Card.css';\r\nimport {useState} from 'react';\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst cookies = new Cookies();\r\n\r\n\r\nfunction CategoryForm(props) {\r\n    let [title, setTitle] = useState('')\r\n\r\n    function onChange(event) {\r\n        setTitle(event.target.value);\r\n    }\r\n\r\n    function submit(event) {\r\n        props.submit(title)\r\n    }\r\n\r\n    return (\r\n        <div className=\"card-form\">\r\n            <input className=\"form-control\" style={{marginBottom: '10px'}} onChange={onChange} placeholder=\"Enter the title...\" type=\"text\"/>\r\n            <button className=\"btn btn-primary\" onClick={submit} style={{float: 'right', padding: '6px 14px'}}>+</button>\r\n            <button className=\"cancel\" onClick={props.cancel} style={{float: 'left'}}>Cancel</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoryForm;","import './App.css';\r\nimport Card from './components/Card';\r\nimport {useEffect, useState} from 'react';\r\nimport CategoryForm from './components/CategoryForm';\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst cookie = new Cookies();\r\n\r\nfunction App() {\r\n    let username = cookie.get('username')\r\n    let data = []\r\n    var objToday = new Date(),\r\n            weekday = new Array('Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'),\r\n            dayOfWeek = weekday[objToday.getDay()],\r\n            domEnder = function() { var a = objToday; if (/1/.test(parseInt((a + \"\").charAt(0)))) return \"th\"; a = parseInt((a + \"\").charAt(1)); return 1 == a ? \"st\" : 2 == a ? \"nd\" : 3 == a ? \"rd\" : \"th\" }(),\r\n            dayOfMonth = ( objToday.getDate() < 10) ? '0' + objToday.getDate() + domEnder : objToday.getDate() + domEnder,\r\n            months = new Array('January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'),\r\n            curMonth = months[objToday.getMonth()],\r\n            curYear = objToday.getFullYear()\r\n    let [date, setDate] = useState(dayOfWeek + ', ' + dayOfMonth + ' ' + curMonth + ', ' + curYear)\r\n    useEffect(() => {\r\n        fetch('/data', {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({username: username})\r\n        }).then((res) => {\r\n            res.json().then((json) => {data = json; console.log(json)}).then(() => {\r\n                setLinks(data);\r\n            });\r\n        })\r\n    }, [])\r\n    let [isClick, setClick] = useState(false);\r\n    let [links, setLinks] = useState(data);\r\n\r\n    function onClick() {\r\n        setClick(true)\r\n    }\r\n\r\n    function cancel() {\r\n        setClick(false)\r\n    }\r\n\r\n    function submit(title) {\r\n        setLinks(prev => {\r\n            fetch('/update', {\r\n                method: 'POST',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({username: username, data: [...prev, {title: title, links: []}]})\r\n            }).then((res) => {\r\n                console.log('req sent')\r\n            })\r\n            return [...prev, {title: title, links: []}]\r\n        })\r\n    }\r\n\r\n    function update(link, title) {\r\n        setLinks(prev => {\r\n            let arr = prev;\r\n            arr.forEach(category => {\r\n                if (category.title == title) {\r\n                    category.links.push(link);\r\n                }\r\n            })\r\n\r\n            fetch('/update', {\r\n                method: 'POST',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({username: username, data: [...arr]})\r\n            }).then((res) => {\r\n                console.log('req sent')\r\n            })\r\n\r\n            return [...arr];\r\n       \r\n       })\r\n    }\r\n\r\n    function change() {\r\n        var objToday = new Date(),\r\n            weekday = new Array('Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'),\r\n            dayOfWeek = weekday[objToday.getDay()],\r\n            domEnder = function() { var a = objToday; if (/1/.test(parseInt((a + \"\").charAt(0)))) return \"th\"; a = parseInt((a + \"\").charAt(1)); return 1 == a ? \"st\" : 2 == a ? \"nd\" : 3 == a ? \"rd\" : \"th\" }(),\r\n            dayOfMonth = ( objToday.getDate() < 10) ? '0' + objToday.getDate() + domEnder : objToday.getDate() + domEnder,\r\n            months = new Array('January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'),\r\n            curMonth = months[objToday.getMonth()],\r\n            curYear = objToday.getFullYear(),\r\n            curHour = objToday.getHours() > 12 ? objToday.getHours() - 12 : (objToday.getHours() < 10 ? \"0\" + objToday.getHours() : objToday.getHours()),\r\n            curMinute = objToday.getMinutes() < 10 ? \"0\" + objToday.getMinutes() : objToday.getMinutes(),\r\n            curSeconds = objToday.getSeconds() < 10 ? \"0\" + objToday.getSeconds() : objToday.getSeconds(),\r\n            curMeridiem = objToday.getHours() > 12 ? \"PM\" : \"AM\";\r\n        \r\n        var day = (dayOfWeek + ', ' + dayOfMonth + ' ' + curMonth + ', ' + curYear);\r\n        setDate(day)\r\n    }\r\n\r\n    setInterval(change, 5000)\r\n\r\n    return (\r\n        <>\r\n            <h1 style={{fontSize: '40px', textAlign: 'center', display: 'block', float: 'center'}}>Bookmarks</h1>\r\n            <h3 style={{fontSize: '25px', position: 'fixed', bottom: '15px', right: '10px'}}>{date}</h3>\r\n            {links.map(link => {\r\n                return <Card links={link.links} header={link.title} update={update}/>\r\n            })}\r\n            {!isClick ? <button class=\"add-category\" onClick={onClick}>Add Category</button> : <CategoryForm cancel={cancel} submit={submit} />}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}